package dto

// {{.EntityName}}Create DTO for creating a new {{.EntityName}}
type {{.EntityName}}Create struct {
  Base{{.EntityName}}Create
}

// {{.EntityName}}Update DTO for updating an existing {{.EntityName}}
type {{.EntityName}}Update struct {
  Base{{.EntityName}}Update
}

// {{.EntityName}}Response DTO for responding with {{.EntityName}} data
type {{.EntityName}}Response struct {
  Base{{.EntityName}}Response
}

type {{.EntityName}}QueryExtraOptions struct {
  {{- range .Fields}}
  {{- if and .FilterBy (eq .FieldType "date") (not .Virtual) }}
    {{pascalCase .FieldName}}After *time.Time `form:"{{camelCase .FieldName}}After,omitempty" json:"{{camelCase .FieldName}}After,omitempty"`
    {{pascalCase .FieldName}}Before *time.Time `form:"{{camelCase .FieldName}}Before,omitempty" json:"{{camelCase .FieldName}}Before,omitempty"`
  {{- end}}
  {{- end}}
	Preload      []string `form:"preload[],omitempty" json:"preload[],omitempty"`
}

