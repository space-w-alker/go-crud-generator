package controllers

import "github.com/gin-gonic/gin"

var {{.EntityName}}ProviderSet = wire.NewSet(
	New{{.EntityName}}Controller,
	repositories.New{{.EntityName}}Repository,
	repositories.Provide{{.EntityName}}Repo,
)

// {{.EntityName}}Controller handles HTTP requests for {{.EntityName}}
type {{.EntityName}}Controller struct {
	repository repositories.I{{.EntityName}}Repository
}

// New{{.EntityName}}Controller creates a new controller
func New{{.EntityName}}Controller(repository repositories.I{{.EntityName}}Repository, router *gin.RouterGroup) *{{.EntityName}}Controller {
	controller := &{{.EntityName}}Controller{repository: repository}
  controller.RegisterRoutes(router)
  return controller
}

// RegisterRoutes sets up the routing for the {{.EntityName}} controller
func (c *{{.EntityName}}Controller) RegisterRoutes(router *gin.RouterGroup) {
	{{.EntityName}} := router.Group("/{{snakeCase .EntityName}}")
	{
		{{.EntityName}}.POST("", func(ctx *gin.Context) { c.Create(ctx) })
		{{.EntityName}}.POST("bulk", func(ctx *gin.Context) { c.BulkCreate(ctx) })
		{{.EntityName}}.GET("", func(ctx *gin.Context) {
			c.GetAll(ctx, nil)
		})
		{{.EntityName}}.GET("/:id", func(ctx *gin.Context) { c.GetByID(ctx) })
		{{.EntityName}}.PUT("/:id", func(ctx *gin.Context) { c.Update(ctx) })
		{{.EntityName}}.PUT("bulk", func(ctx *gin.Context) { c.BulkUpdate(ctx) })
		{{.EntityName}}.DELETE("/:id", func(ctx *gin.Context) { c.Delete(ctx) })
		
		// Custom endpoints
		{{- range .CustomEndpoints}}
		{{.EntityName}}.{{.HTTPMethod}}("{{.Path}}", func(ctx *gin.Context) { c.{{.EndpointName}}(ctx) })
		{{- end}}
	}
}
